{"version":3,"sources":["webpack:///./src/components/Post/Meta/Meta.js","webpack:///./src/components/Post/Content/Content.js","webpack:///./src/components/Post/Post.js","webpack:///./src/templates/post-template.js","webpack:///./src/hooks/use-site-metadata.js","webpack:///./src/hooks/use-categories-list.js","webpack:///./src/hooks/use-tags-list.js","webpack:///./src/hooks/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js"],"names":["Meta","_ref","date","category","react_default","a","createElement","className","styles","moment","format","Content","body","title","Post_Meta_Meta","dangerouslySetInnerHTML","__html","Post","post","html","_post$frontmatter","frontmatter","tags","gatsby_browser_entry","to","Post_Content_Content","__webpack_require__","d","__webpack_exports__","query","PostTemplate","data","_useSiteMetadata","useSiteMetadata","siteTitle","siteSubtitle","subtitle","_data$markdownRemark$","markdownRemark","postTitle","postDescription","description","metaDescription","Layout","components_Post_Post","_1492469078","site","siteMetadata","useCategoriesList","_3964968768","allMarkdownRemark","group","useTagsList","_4175916191","use_site_metadata","use_categories_list","use_tags_list","children","layout","Helmet_default","lang","name","content","property","components_Layout_Layout"],"mappings":"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","file":"component---src-templates-post-template-js-b8ca5ce7c784c7cada2e.js","sourcesContent":["// @flow\nimport React from 'react';\nimport moment from 'moment';\nimport styles from './Meta.module.scss';\n\ntype Props = {\n  date: string,\n  category: string,\n};\n\nconst Meta = ({ date, category }: Props) => (\n  <div className={styles['meta']}>\n    <span className={styles['meta__date']}>{moment(date).format('YYYY-MM-DD')}</span>\n    <span className={styles['meta__category']}>{category}</span>\n  </div>\n);\n\nexport default Meta;\n","// @flow\nimport React from 'react';\nimport styles from './Content.module.scss';\nimport Meta from '../Meta';\n\ntype Props = {\n  body: string,\n  title: string,\n  date: string,\n  category: string,\n};\n\nconst Content = ({\n  body, title, date, category,\n}: Props) => (\n  <div className={styles['content']}>\n    <Meta date={date} category={category} />\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// @flow\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Content from './Content';\nimport styles from './Post.module.scss';\nimport type { Node } from '../../types';\n\ntype Props = {\n  post: Node\n};\n\nconst Post = ({ post }: Props) => {\n  const { html } = post;\n  const {\n    tags, title, date, category\n  } = post.frontmatter;\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__home-button']} to=\"/\">Home</Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} date={date} tags={tags} category={category} />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport { useSiteMetadata } from '../hooks';\nimport type { MarkdownRemark } from '../types';\n\ntype Props = {\n  data: MarkdownRemark\n};\n\nconst PostTemplate = ({ data }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n  const { title: postTitle, description: postDescription } = data.markdownRemark.frontmatter;\n  const metaDescription = postDescription !== null ? postDescription : siteSubtitle;\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription}>\n      <Post post={data.markdownRemark} />\n    </Layout>\n  );\n};\n\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        title\n        category\n      }\n    }\n  }\n`;\n\n\nexport default PostTemplate;\n","// @flow\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            author {\n              name\n              bio\n              photo\n              contacts {\n                email\n                github\n              }\n            }\n            menu {\n              label\n              path\n            }\n            url\n            title\n            copyright\n            disqusShortname\n          }\n        }\n      }\n    `\n  );\n\n  return site.siteMetadata;\n};\n\nexport default useSiteMetadata;\n","// @flow\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst useCategoriesList = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query CategoriesListQuery {\n        allMarkdownRemark(\n          filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n        ) {\n          group(field: frontmatter___category) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `\n  );\n\n  return allMarkdownRemark.group;\n};\n\nexport default useCategoriesList;\n","// @flow\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst useTagsList = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query TagsListQuery {\n        allMarkdownRemark(\n          filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n        ) {\n          group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `\n  );\n\n  return allMarkdownRemark.group;\n};\n\nexport default useTagsList;\n","// @flow\nexport { default as useSiteMetadata } from './use-site-metadata';\nexport { default as useCategoriesList } from './use-categories-list';\nexport { default as useTagsList } from './use-tags-list';\n","// @flow\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport type { Node as ReactNode } from 'react';\nimport styles from './Layout.module.scss';\n\ntype Props = {\n  children: ReactNode,\n  title: string,\n  description?: string\n};\n\nconst Layout = ({ children, title, description }: Props) => (\n  <div className={styles.layout}>\n    <Helmet>\n      <html lang=\"en\" />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:site_name\" content={title} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nexport default Layout;\n","// @flow\nexport { default } from './Layout';\n"],"sourceRoot":""}