{"componentChunkName":"component---src-templates-index-template-js","path":"/","webpackCompilationHash":"4b9ace017d193680fe81","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/node-gyp-rebuild-error/","categorySlug":"/category/error/"},"frontmatter":{"title":"node-gyp rebuild 오류 해결과정","date":"2019-07-04","category":"Error","description":"scrypt를 npm으로 설치하는 과정에서 겪었던 node-gyp rebuild 오류 해결 과정을 정리한 글입니다."}}},{"node":{"fields":{"slug":"/posts/underfetching-overfetching/","categorySlug":"/category/react/"},"frontmatter":{"title":"Rest API의 UnderFetching, OverFetching","date":"2019-06-26","category":"React","description":"rest API의 underfetching, overfetching 개념에 대해 정리한 글입니다."}}},{"node":{"fields":{"slug":"/posts/typescript-react-project/","categorySlug":"/category/react/"},"frontmatter":{"title":"Typescript로 react 프로젝트 생성하기","date":"2019-06-08T22:40:32.169Z","category":"React","description":"create-react-app으로 프로젝트를 생성할 때, Typescript를 적용한 프로젝트를 만드는 방법에 대하여 정리한 글입니다."}}},{"node":{"fields":{"slug":"/posts/koa-router/","categorySlug":"/category/node-js/"},"frontmatter":{"title":"koa-router 사용하기","date":"2019-05-12T00:00:00.000Z","category":"Node.js","description":"이전 글 Koa 프레임워크 시작하기에 이어, koa-router에 대해 정리한 글입니다."}}},{"node":{"fields":{"slug":"/posts/koa-api-tutorial/","categorySlug":"/category/node-js/"},"frontmatter":{"title":"Koa 프레임워크 시작하기","date":"2019-05-11T00:00:00.000Z","category":"Node.js","description":"Node.js의 대표적인 프레임워크 중 하나인 Koa에 대해 간단히 정리한 글입니다."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"currentPage":0,"postsLimit":5,"postsOffset":0,"prevPagePath":"/","nextPagePath":"/page/1","hasPrevPage":false,"hasNextPage":true}}}