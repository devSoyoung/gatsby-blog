{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/html-encoding/","webpackCompilationHash":"4b9ace017d193680fe81","result":{"data":{"markdownRemark":{"id":"6b6b272e-1d34-5ee2-982e-7e49febfcc52","html":"<h2 id=\"html-인코딩\"><a href=\"#html-%EC%9D%B8%EC%BD%94%EB%94%A9\" aria-label=\"html 인코딩 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML 인코딩</h2>\n<p>인코딩을 구글에 검색하면 다음과 같은 설명을 확인할 수 있다.</p>\n<blockquote>\n<p>정보의 형태나 형식을 표준화, 보안, 처리 속도 향상, 저장 공간 절약 등을 위해서 다른 형태나 형식으로 변환하는 처리 혹은 그 처리 방식을 말한다. 즉, 컴퓨터가 이해할 수 있는 형식으로 바꾸어주는 것을 의미한다.</p>\n</blockquote>\n<p>우리가 생성하는 파일도 다양한 방식으로 인코딩을 하는데, HTML 파일의 인코딩 방식과 브라우저의 인코딩 방식이 일치하지 않을 경우 문서의 글자가 깨져보이는 현상이 발생한다. </p>\n<p>우리나라에서 사용하는 한글의 경우에도 그런 상황이 종종 발생한다. 이런 문제를 해결해주기 위해서, HTML 파일에 메타태그를 이용해서 파일의 인코딩 방식을 브라우저에게 알려주어야 한다.</p>\n<h2 id=\"한글-인코딩-방식\"><a href=\"#%ED%95%9C%EA%B8%80-%EC%9D%B8%EC%BD%94%EB%94%A9-%EB%B0%A9%EC%8B%9D\" aria-label=\"한글 인코딩 방식 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한글 인코딩 방식</h2>\n<p>한글의 대표적인 인코딩 방식에는 <code class=\"language-text\">euc-kr</code>과 <code class=\"language-text\">utf-8</code>이 있다.</p>\n<h3 id=\"euc-kr\"><a href=\"#euc-kr\" aria-label=\"euc kr permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>euc-kr</h3>\n<p>1byte 길이의 <code class=\"language-text\">ASCII</code> 인코딩 방식의 길이를 늘려 한글을 사용할 수 있도록 만든 2byte 길이의 국가 언어 코드이다. 이름에서 알 수 있듯이 한글만 사용이 가능하기 때문에, 다른 언어를 사용하는 환경에서는 정상 동작하지 않는다.</p>\n<h3 id=\"utf-8\"><a href=\"#utf-8\" aria-label=\"utf 8 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>utf-8</h3>\n<p><code class=\"language-text\">euc-kr</code>의 다른 언어를 사용하는 환경에서의 동작문제를 해결할 수 있는 인코딩 방식이다. 3byte로 길이는 1byte 길지만, 다양한 언어를 지원하기 때문에 범용성이 좋다.</p>\n<p>요즘에는 용량 문제보다 표준화 및 글로벌 환경을 고려하기 때문에 <code class=\"language-text\">utf-8</code>을 선호한다.</p>\n<h2 id=\"meta-태그로-인코딩-방식-설정하기\"><a href=\"#meta-%ED%83%9C%EA%B7%B8%EB%A1%9C-%EC%9D%B8%EC%BD%94%EB%94%A9-%EB%B0%A9%EC%8B%9D-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"meta 태그로 인코딩 방식 설정하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meta 태그로 인코딩 방식 설정하기</h2>\n<p>HTML 문서의 <code class=\"language-text\">&lt;head&gt;</code> 태그 내에 아래와 같은 <code class=\"language-text\">&lt;meta&gt;</code> 태그를 삽입하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>    \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n        ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<blockquote>\n<p>HTML5 이전에는 <code class=\"language-text\">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</code>와 같이 복잡하게 적어야 했지만, 이제는 저렇게 간단하게 적을 수 있다 :)</p>\n</blockquote>\n<p>이렇게 설정을 해주었는데도 HTML 문서가 여전히 깨진다면 파일 저장할 때 인코딩 방식을 확인해보자. HTML 문서에는 브라우저에게 <code class=\"language-text\">utf-8</code>로 인코딩하라고 알려주고 나는 다른 방식으로 인코딩하고 있었다면.. :(</p>","fields":{"slug":"/posts/html-encoding/","tagSlugs":["/tag/programming/","/tag/html/"]},"frontmatter":{"date":"2019-05-06T00:00:00.000Z","description":"HTML 파일 한글 인코딩이 깨질 때, 인코딩 방식을 지정해주는 메타태그에 대해 정리한 글입니다.","tags":["Programming","HTML"],"title":"인코딩 설정 메타태그"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/html-encoding/"}}}