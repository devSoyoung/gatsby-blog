{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/js-exception","webpackCompilationHash":"67d74db9eb492208cad0","result":{"data":{"markdownRemark":{"id":"bdc683a6-44bd-56ea-8143-f323f086eed3","html":"<h2 id=\"예외처리의-필요성\"><a href=\"#%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"예외처리의 필요성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외처리의 필요성</h2>\n<p>예상치 못하게 발생한 에러를 잘 처리해야 프로그램 전체가 멈추지 않고 동작할 수 있음</p>\n<h2 id=\"try-catch-finally\"><a href=\"#try-catch-finally\" aria-label=\"try catch finally permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Try, Catch, Finally</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 실행하고 싶은 코드</span>\n\t<span class=\"token comment\">// 여기서 실행하다가 에러가 발생하면 catch 블록으로 이동</span>\n\t<span class=\"token keyword\">throw</span> <span class=\"token punctuation\">{</span>전달할 e 값<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// catch 블록으로 이동</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 에러가 발생했을 때,</span>\n\t<span class=\"token comment\">// 에러를 파라미터로 받아서 처리함</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 가장 마지막에 항상 실행되어야 할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>try는 반드시 있어야 함</li>\n<li>catch나 finally는 둘 중 하나만 있어도 실행 가능</li>\n<li><code class=\"language-text\">throw</code> : 에러를 발생시키는 명령어</li>\n</ul>\n<h3 id=\"에러-처리-과정\"><a href=\"#%EC%97%90%EB%9F%AC-%EC%B2%98%EB%A6%AC-%EA%B3%BC%EC%A0%95\" aria-label=\"에러 처리 과정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 처리 과정</h3>\n<p>throw가 발생하면 catch 구문을 찾아서 이동</p>\n<ul>\n<li>현재 블록에 catch나 finally가 없는 경우 상위 블록이나 호출한 함수로 이동</li>\n<li>catch가 존재하지 않는 경우, finally를 실행하고, catch 될 수 있는 구문을 찾아서 이동</li>\n<li>catch 구문에서 에러가 처리되고, 이후 코드를 실행</li>\n</ul>","fields":{"slug":"/posts/js-exception","tagSlugs":["/tag/programming/","/tag/javascript/"]},"frontmatter":{"date":"2019-03-26T00:00:00.000Z","description":"Javascript의 예외처리 방법에 대해 정리한 글입니다.","title":"[JS] 예외처리: try, catch, finally","category":"Javascript"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/js-exception"}}}