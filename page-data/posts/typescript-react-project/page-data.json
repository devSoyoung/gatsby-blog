{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/typescript-react-project/","webpackCompilationHash":"67d74db9eb492208cad0","result":{"data":{"markdownRemark":{"id":"9cbffac9-0c5f-5022-a04e-f05ecf778b85","html":"<p>React 프로젝트를 생성하기 위해서는 webpack 설정 등 사전 작업이 필요합니다. 하지만 페이스북에서 만든 <code class=\"language-text\">create-react-app</code>을 사용하면 손쉽게 설정이 완료된 리액트 프로젝트를 생성할 수 있습니다.</p>\n<p>최근에는 많은 리액트 프로젝트들이 타입스크립트를 적용하고 있습니다. 타입스크립트는 자바스크립트에 타입을 강제하는 언어입니다. 타입스크립트로 개발을 한 후, 자바스크립트로 빌드하는 방식인데, 타입을 지정함으로써 얻는 다양한 이점으로 인해 활용이 늘어가는 추세입니다.</p>\n<p>저도 개인 프로젝트를 진행하면서, 타입스크립트를 적용해보려고 했습니다. 기존의 리액트 프로젝트를 생성하는 방식으로 하면 타입스크립트를 위한 설정을 추가적으로 해주어야 합니다. 초기에 프로젝트를 생성할 때, 옵션을 주면 손쉽게 타입스크립트가 적용된 프로젝트를 생성할 수 있습니다.</p>\n<h2 id=\"프로젝트-생성하기\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"프로젝트 생성하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성하기</h2>\n<p>먼저, npm으로 <code class=\"language-text\">create-react-app</code>을 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g create-react-app</code></pre></div>\n<blockquote>\n<p>-g는 전역으로 설치하겠다는 의미입니다. 현재 위치에서만 사용하려면, -g 옵션을 제외하고 설치하면 됩니다.  </p>\n</blockquote>\n<p>이제, 타입스크립트가 적용된 프로젝트를 다음 명령어로 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">create-react-app ts-app --scripts-version=react-scripts-ts</code></pre></div>\n<p>새로 생긴 <code class=\"language-text\">ts-app</code> 디렉토리에 타입스크립트 리액트 프로젝트가 만들어집니다.\n더 짧은 명령어도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">create-react-app ts-app --typescript</code></pre></div>\n<p>두 방식에 어떤 차이가 있는지 궁금해서 각각의 방식으로 생성 후 만들어진 결과물을 비교해보았습니다.</p>\n<h3 id=\"scripts-version-방식\"><a href=\"#scripts-version-%EB%B0%A9%EC%8B%9D\" aria-label=\"scripts version 방식 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>—scripts-version 방식</h3>\n<p>첫 번째 방식으로 생성한 경우, 아래와 같은 <code class=\"language-text\">package.json</code>이 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;name&quot;: &quot;typescript-react-app&quot;,\n  &quot;version&quot;: &quot;0.1.0&quot;,\n  &quot;private&quot;: *true*,\n  &quot;dependencies&quot;: {\n    &quot;react&quot;: &quot;^16.8.6&quot;,\n    &quot;react-dom&quot;: &quot;^16.8.6&quot;,\n    &quot;react-scripts-ts&quot;: &quot;3.1.0&quot;\n  },\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;react-scripts-ts start&quot;,\n    &quot;build&quot;: &quot;react-scripts-ts build&quot;,\n    &quot;test&quot;: &quot;react-scripts-ts test --env=jsdom&quot;,\n    &quot;eject&quot;: &quot;react-scripts-ts eject&quot;\n  },\n  &quot;devDependencies&quot;: {\n    &quot;@types/jest&quot;: &quot;^24.0.13&quot;,\n    &quot;@types/node&quot;: &quot;^12.0.7&quot;,\n    &quot;@types/react&quot;: &quot;^16.8.19&quot;,\n    &quot;@types/react-dom&quot;: &quot;^16.8.4&quot;,\n    &quot;typescript&quot;: &quot;^3.5.1&quot;\n  }\n}</code></pre></div>\n<p>typescript와 관련된 라이브러리가 <code class=\"language-text\">devDependencies</code>에 포함됩니다. 그리고, <code class=\"language-text\">react-scripts</code> 대신 옵션으로 준,  <code class=\"language-text\">react-scripts-ts</code>가 설치됩니다.</p>\n<p>프로젝트에 tslint 설정파일과 <code class=\"language-text\">tsconfig.json</code>이 생성되고, 자바스크립트로 생성한 프로젝트의 <code class=\"language-text\">package.json</code>에 있는 <code class=\"language-text\">browserslist</code> 관련 설정은 없습니다.</p>\n<h3 id=\"typescript-방식\"><a href=\"#typescript-%EB%B0%A9%EC%8B%9D\" aria-label=\"typescript 방식 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>—typescript 방식</h3>\n<p>typescript 옵션을 준 경우, 아래와 같은 <code class=\"language-text\">package.json</code>이 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;name&quot;: &quot;ts-app&quot;,\n  &quot;version&quot;: &quot;0.1.0&quot;,\n  &quot;private&quot;: *true*,\n  &quot;dependencies&quot;: {\n    &quot;@types/jest&quot;: &quot;24.0.13&quot;,\n    &quot;@types/node&quot;: &quot;12.0.7&quot;,\n    &quot;@types/react&quot;: &quot;16.8.19&quot;,\n    &quot;@types/react-dom&quot;: &quot;16.8.4&quot;,\n    &quot;react&quot;: &quot;^16.8.6&quot;,\n    &quot;react-dom&quot;: &quot;^16.8.6&quot;,\n    &quot;react-scripts&quot;: &quot;3.0.1&quot;,\n    &quot;typescript&quot;: &quot;3.5.1&quot;\n  },\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;react-scripts start&quot;,\n    &quot;build&quot;: &quot;react-scripts build&quot;,\n    &quot;test&quot;: &quot;react-scripts test&quot;,\n    &quot;eject&quot;: &quot;react-scripts eject&quot;\n  },\n  &quot;eslintConfig&quot;: {\n    &quot;extends&quot;: &quot;react-app&quot;\n  },\n  &quot;browserslist&quot;: {\n    &quot;production&quot;: [\n      &quot;&gt;0.2%&quot;,\n      &quot;not dead&quot;,\n      &quot;not op_mini all&quot;\n    ],\n    &quot;development&quot;: [\n      &quot;last 1 chrome version&quot;,\n      &quot;last 1 firefox version&quot;,\n      &quot;last 1 safari version&quot;\n    ]\n  }\n}</code></pre></div>\n<p>자바스크립트로 생성한 프로젝트에 타입스크립트 관련 모듈이 추가된 형태입니다. <code class=\"language-text\">devDependencies</code> 대신 <code class=\"language-text\">dependencies</code>에 추가됩니다. tslint 설정파일도 생성되지 않습니다.</p>\n<h2 id=\"자바스크립트로-생성한-리액트-프로젝트\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EC%83%9D%EC%84%B1%ED%95%9C-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"자바스크립트로 생성한 리액트 프로젝트 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트로 생성한 리액트 프로젝트</h2>\n<p>아무런 옵션 없이 프로젝트를 생성했을 때에는 다음과 같은 <code class=\"language-text\">package.json</code>이 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;name&quot;: &quot;js-app&quot;,\n  &quot;version&quot;: &quot;0.1.0&quot;,\n  &quot;private&quot;: *true*,\n  &quot;dependencies&quot;: {\n    &quot;react&quot;: &quot;^16.8.6&quot;,\n    &quot;react-dom&quot;: &quot;^16.8.6&quot;,\n    &quot;react-scripts&quot;: &quot;3.0.1&quot;\n  },\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;react-scripts start&quot;,\n    &quot;build&quot;: &quot;react-scripts build&quot;,\n    &quot;test&quot;: &quot;react-scripts test&quot;,\n    &quot;eject&quot;: &quot;react-scripts eject&quot;\n  },\n  &quot;eslintConfig&quot;: {\n    &quot;extends&quot;: &quot;react-app&quot;\n  },\n  &quot;browserslist&quot;: {\n    &quot;production&quot;: [\n      &quot;&gt;0.2%&quot;,\n      &quot;not dead&quot;,\n      &quot;not op_mini all&quot;\n    ],\n    &quot;development&quot;: [\n      &quot;last 1 chrome version&quot;,\n      &quot;last 1 firefox version&quot;,\n      &quot;last 1 safari version&quot;\n    ]\n  }\n}</code></pre></div>\n<p><code class=\"language-text\">—typescript</code> 방식과 비슷합니다.</p>\n<h2 id=\"글을-마무리하며\"><a href=\"#%EA%B8%80%EC%9D%84-%EB%A7%88%EB%AC%B4%EB%A6%AC%ED%95%98%EB%A9%B0\" aria-label=\"글을 마무리하며 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글을 마무리하며</h2>\n<p>두 방식에 큰 차이가 없어 편안한 방식이나 원하는 결과물을 내는 방식을 선택해서 사용하면 될 것 같습니다. 이제 타입스크립트를 적용한 프로젝트를 만들어보며 타입스크립트의 장점을 몸소 느껴봐야겠습니다 :)</p>","fields":{"slug":"/posts/typescript-react-project/","tagSlugs":["/tag/front-end/","/tag/react/","/tag/web-development/"]},"frontmatter":{"date":"2019-06-08T22:40:32.169Z","description":"create-react-app으로 프로젝트를 생성할 때, Typescript를 적용한 프로젝트를 만드는 방법에 대하여 정리한 글입니다.","title":"[React] Typescript로 react 프로젝트 생성하기","category":"React"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/typescript-react-project/"}}}